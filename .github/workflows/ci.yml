name: CS & Tests

on:
  # Run on all pushes and on all pull requests.
  # Prevent the "push" build from running when there are only irrelevant changes.
  push:
    paths-ignore:
      - '**.md'
  pull_request:
  # Allow manually triggering the workflow.
  workflow_dispatch:

jobs:
  checkcs:
    name: 'Basic CS and QA checks'
    runs-on: ubuntu-latest

    env:
      XMLLINT_INDENT: '	'

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: none
          tools: cs2pr

      # Show PHP lint violations inline in the file diff.
      # @link https://github.com/marketplace/actions/xmllint-problem-matcher
      - name: Register PHP lint violations to appear as file diff comments
        uses: korelstar/phplint-problem-matcher@v1

      # Show XML violations inline in the file diff.
      # @link https://github.com/marketplace/actions/xmllint-problem-matcher
      - name: Register XML violations to appear as file diff comments
        uses: korelstar/xmllint-problem-matcher@v1

      - name: Checkout code
        uses: actions/checkout@v2

      # Validate the composer.json file.
      # @link https://getcomposer.org/doc/03-cli.md#validate
      - name: Validate Composer installation
        continue-on-error: true
        run: composer validate --no-check-all --strict

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies
        uses: ramsey/composer-install@v1

      # Lint PHP.
      - name: Lint PHP against parse errors
        run: composer lint-ci | cs2pr

      # Needed as runs-on: system doesn't have xml-lint by default.
      # @link https://github.com/marketplace/actions/xml-lint
      - name: Lint phpunit.xml.dist
        uses: ChristophWurst/xmllint-action@v1
        with:
          xml-file: ./phpunit.xml.dist
          xml-schema-file: ./vendor/phpunit/phpunit/phpunit.xsd

      # Check the code-style consistency of the PHP files.
#      - name: Check PHP code style
#        continue-on-error: true
#        run: vendor/bin/phpcs --report-full --report-checkstyle=./phpcs-report.xml

#      - name: Show PHPCS results in PR
#        run: cs2pr ./phpcs-report.xml

  test:
    name: Integration tests
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allowed_failure }}

    env:
      WP_VERSION: latest
      WP_MULTISITE: ${{ matrix.wp_multisite }}

    strategy:
      matrix:
        php: [ '8.0', '7.4', '7.3', '7.2', '7.1', '7.0', '5.6' ]
        allowed_failure: [ false ]
        wp_multisite: [ 0, 1 ]
        include:
          # PHP nightly.
          - php: '8.1'
            allowed_failure: true
            wp_multisite: 0
          - php: '8.1'
            allowed_failure: true
            wp_multisite: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Setup PHP 7.4
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: pcov
          # https://make.wordpress.org/hosting/handbook/handbook/server-environment/#php-extensions
          extensions: curl, dom, exif, fileinfo, hash, json, mbstring, mysqli, libsodium, openssl, pcre, imagick, xml, zip

      - name: Install Composer dependencies (PHP < 8.0 )
        if: ${{ matrix.php < 8.0 }}
        uses: ramsey/composer-install@v1

      - name: Install Composer dependencies (PHP >= 8.0)
        if: ${{ matrix.php >= 8.0 }}
        uses: ramsey/composer-install@v1
        with:
          composer-options: --ignore-platform-reqs

      - name: Setup Problem Matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

#      - name: Run unit tests
#        run: composer unit

      - name: Start MySQL Service
        run: sudo systemctl start mysql.service

      - name: Prepare environment for integration tests
        run: composer prepare

      - name: Run integration tests
        run: composer integration
